"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WavyLink = void 0;

var _client = require("react-dom/client");

var _reactRouterDom = require("react-router-dom");

var _WavyWaves = require("./WavyWaves");

var _jsxRuntime = require("react/jsx-runtime");

var WavyLink = function WavyLink(_ref) {
  var to = _ref.to,
      children = _ref.children,
      color = _ref.color,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? "down" : _ref$direction,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 1500 : _ref$duration;
  var navigate = (0, _reactRouterDom.useNavigate)();

  var handleClick = function handleClick() {
    if (!document.getElementById("react-wavy-transitions__waves") && window.location.pathname !== to) {
      // change the url in address bar
      window.history.pushState("", "", to); // get access to wave container

      var container = (0, _client.createRoot)(document.getElementById("react-wavy-transitions__container")); // show the waves

      container.render( /*#__PURE__*/(0, _jsxRuntime.jsx)(_WavyWaves.WavyWaves, {
        duration: duration,
        color: color,
        direction: direction
      })); // do the route change

      setTimeout(function () {
        return navigate(to);
      }, duration / 2); // half total animation
      // hide the waves

      setTimeout(function () {
        return container.unmount();
      }, duration); // total animation
    }
  };

  return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
    type: "button",
    className: "react-wavy-transitions__wavy-link",
    onClick: handleClick,
    children: children
  });
};

exports.WavyLink = WavyLink;